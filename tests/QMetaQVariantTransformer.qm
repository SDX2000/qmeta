qmeta QMetaQVariantTransformer {
    grammar         = ["GRAMMAR", string:n, rule+:rs]               -> {render(out, "grammar", vars)};

    rule            = ["RULE", string:n, expr:e]                    -> {render(out, "rule", vars)};

    expr            = compoundExpr
                    | ruleApp
                    | notExpr
                    | loopExpr
                    | optionalExpr
                    | varDef
                    | hostExpr;

    compoundExpr    = [("OR"|"AND"):op, expr+:es]                   -> {render(out, "compoundExpr", vars)};

    notExpr         = ["NOT", expr:e]                               -> {render(out, "notExpr", vars)};

    loopExpr        = [("ZERO_OR_MORE"|"ONE_OR_MORE"):op, expr:e]   -> {render(out, "loopExpr", vars)};

    optionalExpr    = ["OPTIONAL", expr:e]                          -> {render(out, "optionalExpr", vars)};

    varDef          = ["DEFINE", string:n, expr:e]                  -> {render(out, "varDef", vars)};

    hostExpr        = ["HOST_EXPR", expr:e, string:hexp]            -> {render(out, "hostExpr", vars)};

    ruleApp         = ["APPLY", string]                             -> {render(out, "ruleApp", vars)};
}
